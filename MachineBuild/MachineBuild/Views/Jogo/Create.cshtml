@model MachineBuild.Models.Jogo

@{
    ViewBag.Title = "Create";
}

<h2>Cadatro</h2>


@using (Html.BeginForm("create", "Jogo", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Jogo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, "Descrição", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Desenvolvedora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Desenvolvedora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Desenvolvedora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageByte, "Capa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="image1"  name="image1"> 
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlacaVideoNota, "Nota Placa de Vídeo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlacaVideoNota, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlacaVideoNota, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProcessadorNota, "Nota Processador", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProcessadorNota, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProcessadorNota, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PcConfigID, "Configuração Mínima", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PcConfigID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PcConfigID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecomendadaConfigID, "Configuração Recomendada", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RecomendadaConfigID, new SelectList(new List<Object> { new { value = "minima", text = "Mínima" }, new { value = "recomendada", text = "Recomendada" } }, "value", "text"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RecomendadaConfigID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
            $.get("/Jogo/GetConfigMinimaList", {}, function (data) {
                $("#PcConfigID").empty();
                $.each(data, function (index, row) {
                    $("#PcConfigID").append("<option value='" + row.Id + "'>" + row.Nome + "</option>")
                });
            });
    });
</script>

<script>
    $(document).ready(function () {
        $.get("/Jogo/GetConfigRecomendadaList", {}, function (data) {
            $("#RecomendadaConfigID").empty();
            $.each(data, function (index, row) {
                $("#RecomendadaConfigID").append("<option value='" + row.Id + "'>" + row.Nome + "</option>")
            });
        });
    });
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
